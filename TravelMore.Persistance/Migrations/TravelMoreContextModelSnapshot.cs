// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelMore.Persistance.Contexts.TravelMore;

#nullable disable

namespace TravelMore.Persistance.Migrations
{
    [DbContext(typeof(TravelMoreContext))]
    partial class TravelMoreContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelMore.Domain.Bookings.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookedHotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GuestId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookedHotelId");

                    b.HasIndex("GuestId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("TravelMore.Domain.Hotels.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<short>("MaxNumberOfGuests")
                        .HasColumnType("smallint");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Hotels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("db37121d-c8fe-4f41-ab6e-34dded72f3b4"),
                            Description = "host@gmail.com",
                            MaxNumberOfGuests = (short)10,
                            OwnerId = 2
                        });
                });

            modelBuilder.Entity("TravelMore.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelMore.Domain.Users.Guests.Guest", b =>
                {
                    b.HasBaseType("TravelMore.Domain.Users.User");

                    b.HasDiscriminator().HasValue("Guest");

                    b.HasData(
                        new
                        {
                            Id = 1
                        });
                });

            modelBuilder.Entity("TravelMore.Domain.Users.Hosts.Host", b =>
                {
                    b.HasBaseType("TravelMore.Domain.Users.User");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Host");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "host@gmail.com"
                        });
                });

            modelBuilder.Entity("TravelMore.Domain.Bookings.Booking", b =>
                {
                    b.HasOne("TravelMore.Domain.Hotels.Hotel", "BookedHotel")
                        .WithMany("Bookings")
                        .HasForeignKey("BookedHotelId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TravelMore.Domain.Users.Guests.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.OwnsOne("TravelMore.Domain.Shared.Models.Money", "TotalPayment", b1 =>
                        {
                            b1.Property<Guid>("BookingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 10)
                                .HasColumnType("decimal(18,10)");

                            b1.HasKey("BookingId");

                            b1.ToTable("Bookings");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.OwnsOne("TravelMore.Domain.Bookings.BookingSchedules.BookingSchedule", "Schedule", b1 =>
                        {
                            b1.Property<Guid>("BookingId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("From")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("To")
                                .HasColumnType("datetime2");

                            b1.HasKey("BookingId");

                            b1.ToTable("Bookings");

                            b1.WithOwner()
                                .HasForeignKey("BookingId");
                        });

                    b.Navigation("BookedHotel");

                    b.Navigation("Guest");

                    b.Navigation("Schedule")
                        .IsRequired();

                    b.Navigation("TotalPayment")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelMore.Domain.Hotels.Hotel", b =>
                {
                    b.HasOne("TravelMore.Domain.Users.Hosts.Host", "Owner")
                        .WithMany("Hotels")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("TravelMore.Domain.Shared.Models.Money", "Price", b1 =>
                        {
                            b1.Property<Guid>("HotelId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 10)
                                .HasColumnType("decimal(18,10)");

                            b1.HasKey("HotelId");

                            b1.ToTable("Hotels");

                            b1.WithOwner()
                                .HasForeignKey("HotelId");

                            b1.HasData(
                                new
                                {
                                    HotelId = new Guid("db37121d-c8fe-4f41-ab6e-34dded72f3b4"),
                                    Amount = 100m
                                });
                        });

                    b.Navigation("Owner");

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelMore.Domain.Users.Guests.Guest", b =>
                {
                    b.OwnsOne("TravelMore.Domain.Shared.Models.Money", "Balance", b1 =>
                        {
                            b1.Property<int>("GuestId")
                                .HasColumnType("int");

                            b1.Property<decimal>("Amount")
                                .HasPrecision(18, 10)
                                .HasColumnType("decimal(18,10)");

                            b1.HasKey("GuestId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("GuestId");

                            b1.HasData(
                                new
                                {
                                    GuestId = 1,
                                    Amount = 100000m
                                });
                        });

                    b.Navigation("Balance")
                        .IsRequired();
                });

            modelBuilder.Entity("TravelMore.Domain.Hotels.Hotel", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelMore.Domain.Users.Guests.Guest", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("TravelMore.Domain.Users.Hosts.Host", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
